@inherits RazorBlade.PlainTextTemplate<RSCG_IFormattable.InfoClass>;
namespace @Model.nameSpace {

    partial class @Model.name {
        public string ToString(string format){
            return ToString(format, System.Globalization.CultureInfo.CurrentCulture);
        }
        public string ToString(string format, IFormatProvider provider) {
            if (String.IsNullOrEmpty(format)) format = "G";
            if (provider == null) provider = System.Globalization.CultureInfo.CurrentCulture;
            string retValue=format;
            if(format=="G") {
                retValue ="";
@foreach (var item in Model.propsWithGet)
{
    <text>
        retValue += "@item.Name = " + @item.Name + ";";
    </text>
}
    return retValue;
            }
            //replace items without IFormattable
            @foreach(var item in Model.propsWithGet) {
                bool isNullable = item.AdmitNulls;
                string val = "val.ToString()";
                if(isNullable){
                    val = @"val?.ToString()??""""";
                }
                <text>
                    if(format.Contains("{@item.Name}")){
                        var val = @item.Name.ToString();
                        retValue=retValue.Replace("{@item.Name}", @val);
                    }
                </text>   
            }


            return retValue;
        }
    }


}